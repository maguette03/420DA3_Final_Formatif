// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _420DA3_Final_Formatif.DataAccess;

#nullable disable

namespace _420DA3_Final_Formatif.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241210052837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CountriesLanguages", b =>
                {
                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("CountryId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("CountriesLanguages", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            LanguageId = 1
                        },
                        new
                        {
                            CountryId = 2,
                            LanguageId = 3
                        });
                });

            modelBuilder.Entity("_420DA3_Final_Formatif.Business.Domain.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("FullName")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(3);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(32")
                        .HasColumnName("ShortName")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Dominion of Canada",
                            ShortName = "Canada"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Federal Republic  of Germany",
                            ShortName = "Germany"
                        });
                });

            modelBuilder.Entity("_420DA3_Final_Formatif.Business.Domain.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("IsoCode")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("RowVersion")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsoCode = "en",
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            IsoCode = "fr",
                            Name = "French"
                        },
                        new
                        {
                            Id = 3,
                            IsoCode = "de",
                            Name = "Greman"
                        });
                });

            modelBuilder.Entity("CountriesLanguages", b =>
                {
                    b.HasOne("_420DA3_Final_Formatif.Business.Domain.Country", null)
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_420DA3_Final_Formatif.Business.Domain.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
